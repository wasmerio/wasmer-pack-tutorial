/// A point coordinate structure with { x, y }
record point {
    x: float32,
    y: float32
}


/// A line geometry to represent a line segment with starting and ending point
record line-segment {
    start: point,
    end: point
}

/// A structure to represent a circle with center point and a radius
record circle {
    center: point,
    radius: float32
}

/// Arbitary shape - represent a shape with n number of points using a list of points
record shape {
    points: list<point>
}

/// Calculate distance between two points
distance-between: func(p1: point, p2: point) -> float32
